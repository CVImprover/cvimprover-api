version: '3.9'

x-postgres-common: &postgres-common
  image: postgres:latest
  user: postgres
  restart: always
  env_file:
    - .env
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
    interval: 10s
    timeout: 5s
    retries: 10

x-redis-common: &redis-common
  image: redis:alpine
  restart: always
  healthcheck:
    test: ["CMD", "redis-cli", "ping"]
    interval: 10s
    timeout: 5s
    retries: 5    

services:
  web:
    container_name: cvimprover_django
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST}
    depends_on:
      postgres_master:
        condition: service_healthy

  postgres_master:
    <<: *postgres-common
    container_name: cvimprover_postgres-master
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}      
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    <<: *redis-common
    container_name: cvimprover_redis
    ports:
      - "6379:6379"

  celery:
    container_name: cvimprover_celery
    build: .
    command: >
      celery -A extratime worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis

  celery-beat:
    container_name: cvimprover_celery_beat
    build: .
    command: >
      celery -A extratime beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    depends_on:
      - web
      - redis


volumes:
  postgres_data:
